buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
//        maven {
//            name = 'sponge'
//            url = 'https://repo.spongepowered.org/maven'
//        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
//        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//apply plugin: 'org.spongepowered.mixin'

version = "0.1"
group = "co.uk.isxander"
archivesBaseName = "xanderlib"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
}

//mixin {
//    defaultObfuscationEnv = "notch"
//    add sourceSets.main, "mixins.xanderlib.refmap.json"
//}

repositories {
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
}
configurations {
    embed
    compile.extendsFrom(embed)
}


dependencies {
    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    embed 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.32'
    embed 'org.scala-lang:scala-library:2.11.12'
}

processResources{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
       
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
//    manifest.attributes(
//            "MixinConfigs": 'mixins.xanderlib.json',
//            "TweakClass": 'co.uk.isxander.xanderlib.mixins.XanderLibTweaker',
//            "TweakOrder": 0,
//            "Manifest-Version": 1.0
//    )

    dependsOn configurations.compile
    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
        from(project.zipTree(dep)) {
            include 'META-INF/services', 'META-INF/services/**'
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}
